//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessLogic.CloudController {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CloudController.CloudControllerSoap")]
    public interface CloudControllerSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTableUsing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getTableUsing(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTableUsing", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTableUsingAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllUsers(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllUsersAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrentAuthor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCurrentAuthor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrentAuthor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCurrentAuthorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrentLanguage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCurrentLanguage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrentLanguage", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCurrentLanguageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertNewlanguage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertNewlanguage(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertNewlanguage", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertNewlanguageAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateBook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateBook(string ISBN, string bookName, int author, int categ, int lang, int publishYear, int nPages, string publisher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateBook", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateBookAsync(string ISBN, string bookName, int author, int categ, int lang, int publishYear, int nPages, string publisher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTotalFee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getTotalFee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTotalFee", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTotalFeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int deleteUser(int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteUser", ReplyAction="*")]
        System.Threading.Tasks.Task<int> deleteUserAsync(int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateUser(int userID, string userName, string userPass, int userLevel, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateUser", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateUserAsync(int userID, string userName, string userPass, int userLevel, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveNewUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int saveNewUser(string userName, string password, int userLevel, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveNewUser", ReplyAction="*")]
        System.Threading.Tasks.Task<int> saveNewUserAsync(string userName, string password, int userLevel, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteBook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int deleteBook(string bookISBN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteBook", ReplyAction="*")]
        System.Threading.Tasks.Task<int> deleteBookAsync(string bookISBN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertNewAuthor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertNewAuthor(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertNewAuthor", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertNewAuthorAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertNewCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertNewCategory(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertNewCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertNewCategoryAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrentCategories", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCurrentCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrentCategories", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCurrentCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateActualReturnDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateActualReturnDate(string bookISBN, string currentTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateActualReturnDate", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateActualReturnDateAsync(string bookISBN, string currentTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/booksBorrowedBy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet booksBorrowedBy(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/booksBorrowedBy", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> booksBorrowedByAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/booksAvailablToBorrow", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet booksAvailablToBorrow();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/booksAvailablToBorrow", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> booksAvailablToBorrowAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkReservedDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string checkReservedDate(string ISBN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkReservedDate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> checkReservedDateAsync(string ISBN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CheckUser(string userName, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUser", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CheckUserAsync(string userName, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/createNewReservedRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int createNewReservedRecord(int userID, string ISBN, string reservationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/createNewReservedRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<int> createNewReservedRecordAsync(int userID, string ISBN, string reservationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertNewBook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertNewBook(string ISBN, string bookName, int author, int categ, int lang, int publishYear, int nPages, string publisher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertNewBook", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertNewBookAsync(string ISBN, string bookName, int author, int categ, int lang, int publishYear, int nPages, string publisher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkActualReturnDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string checkActualReturnDate(string bookISBN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkActualReturnDate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> checkActualReturnDateAsync(string bookISBN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveBookBorrowed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int saveBookBorrowed(int userID, string bookISBN, string borrowDate, string estimatedReturnDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/saveBookBorrowed", ReplyAction="*")]
        System.Threading.Tasks.Task<int> saveBookBorrowedAsync(int userID, string bookISBN, string borrowDate, string estimatedReturnDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CloudControllerSoapChannel : BusinessLogic.CloudController.CloudControllerSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloudControllerSoapClient : System.ServiceModel.ClientBase<BusinessLogic.CloudController.CloudControllerSoap>, BusinessLogic.CloudController.CloudControllerSoap {
        
        public CloudControllerSoapClient() {
        }
        
        public CloudControllerSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CloudControllerSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CloudControllerSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CloudControllerSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet getTableUsing(string query) {
            return base.Channel.getTableUsing(query);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTableUsingAsync(string query) {
            return base.Channel.getTableUsingAsync(query);
        }
        
        public System.Data.DataSet getAllUsers(string query) {
            return base.Channel.getAllUsers(query);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllUsersAsync(string query) {
            return base.Channel.getAllUsersAsync(query);
        }
        
        public System.Data.DataSet getCurrentAuthor() {
            return base.Channel.getCurrentAuthor();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCurrentAuthorAsync() {
            return base.Channel.getCurrentAuthorAsync();
        }
        
        public System.Data.DataSet getCurrentLanguage() {
            return base.Channel.getCurrentLanguage();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCurrentLanguageAsync() {
            return base.Channel.getCurrentLanguageAsync();
        }
        
        public int insertNewlanguage(string text) {
            return base.Channel.insertNewlanguage(text);
        }
        
        public System.Threading.Tasks.Task<int> insertNewlanguageAsync(string text) {
            return base.Channel.insertNewlanguageAsync(text);
        }
        
        public int updateBook(string ISBN, string bookName, int author, int categ, int lang, int publishYear, int nPages, string publisher) {
            return base.Channel.updateBook(ISBN, bookName, author, categ, lang, publishYear, nPages, publisher);
        }
        
        public System.Threading.Tasks.Task<int> updateBookAsync(string ISBN, string bookName, int author, int categ, int lang, int publishYear, int nPages, string publisher) {
            return base.Channel.updateBookAsync(ISBN, bookName, author, categ, lang, publishYear, nPages, publisher);
        }
        
        public System.Data.DataSet getTotalFee() {
            return base.Channel.getTotalFee();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTotalFeeAsync() {
            return base.Channel.getTotalFeeAsync();
        }
        
        public int deleteUser(int user) {
            return base.Channel.deleteUser(user);
        }
        
        public System.Threading.Tasks.Task<int> deleteUserAsync(int user) {
            return base.Channel.deleteUserAsync(user);
        }
        
        public int updateUser(int userID, string userName, string userPass, int userLevel, string email) {
            return base.Channel.updateUser(userID, userName, userPass, userLevel, email);
        }
        
        public System.Threading.Tasks.Task<int> updateUserAsync(int userID, string userName, string userPass, int userLevel, string email) {
            return base.Channel.updateUserAsync(userID, userName, userPass, userLevel, email);
        }
        
        public int saveNewUser(string userName, string password, int userLevel, string email) {
            return base.Channel.saveNewUser(userName, password, userLevel, email);
        }
        
        public System.Threading.Tasks.Task<int> saveNewUserAsync(string userName, string password, int userLevel, string email) {
            return base.Channel.saveNewUserAsync(userName, password, userLevel, email);
        }
        
        public int deleteBook(string bookISBN) {
            return base.Channel.deleteBook(bookISBN);
        }
        
        public System.Threading.Tasks.Task<int> deleteBookAsync(string bookISBN) {
            return base.Channel.deleteBookAsync(bookISBN);
        }
        
        public int insertNewAuthor(string text) {
            return base.Channel.insertNewAuthor(text);
        }
        
        public System.Threading.Tasks.Task<int> insertNewAuthorAsync(string text) {
            return base.Channel.insertNewAuthorAsync(text);
        }
        
        public int insertNewCategory(string text) {
            return base.Channel.insertNewCategory(text);
        }
        
        public System.Threading.Tasks.Task<int> insertNewCategoryAsync(string text) {
            return base.Channel.insertNewCategoryAsync(text);
        }
        
        public System.Data.DataSet getCurrentCategories() {
            return base.Channel.getCurrentCategories();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCurrentCategoriesAsync() {
            return base.Channel.getCurrentCategoriesAsync();
        }
        
        public int updateActualReturnDate(string bookISBN, string currentTime) {
            return base.Channel.updateActualReturnDate(bookISBN, currentTime);
        }
        
        public System.Threading.Tasks.Task<int> updateActualReturnDateAsync(string bookISBN, string currentTime) {
            return base.Channel.updateActualReturnDateAsync(bookISBN, currentTime);
        }
        
        public System.Data.DataSet booksBorrowedBy(int userID) {
            return base.Channel.booksBorrowedBy(userID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> booksBorrowedByAsync(int userID) {
            return base.Channel.booksBorrowedByAsync(userID);
        }
        
        public System.Data.DataSet booksAvailablToBorrow() {
            return base.Channel.booksAvailablToBorrow();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> booksAvailablToBorrowAsync() {
            return base.Channel.booksAvailablToBorrowAsync();
        }
        
        public string checkReservedDate(string ISBN) {
            return base.Channel.checkReservedDate(ISBN);
        }
        
        public System.Threading.Tasks.Task<string> checkReservedDateAsync(string ISBN) {
            return base.Channel.checkReservedDateAsync(ISBN);
        }
        
        public System.Data.DataSet CheckUser(string userName, string userPassword) {
            return base.Channel.CheckUser(userName, userPassword);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CheckUserAsync(string userName, string userPassword) {
            return base.Channel.CheckUserAsync(userName, userPassword);
        }
        
        public int createNewReservedRecord(int userID, string ISBN, string reservationDate) {
            return base.Channel.createNewReservedRecord(userID, ISBN, reservationDate);
        }
        
        public System.Threading.Tasks.Task<int> createNewReservedRecordAsync(int userID, string ISBN, string reservationDate) {
            return base.Channel.createNewReservedRecordAsync(userID, ISBN, reservationDate);
        }
        
        public int insertNewBook(string ISBN, string bookName, int author, int categ, int lang, int publishYear, int nPages, string publisher) {
            return base.Channel.insertNewBook(ISBN, bookName, author, categ, lang, publishYear, nPages, publisher);
        }
        
        public System.Threading.Tasks.Task<int> insertNewBookAsync(string ISBN, string bookName, int author, int categ, int lang, int publishYear, int nPages, string publisher) {
            return base.Channel.insertNewBookAsync(ISBN, bookName, author, categ, lang, publishYear, nPages, publisher);
        }
        
        public string checkActualReturnDate(string bookISBN) {
            return base.Channel.checkActualReturnDate(bookISBN);
        }
        
        public System.Threading.Tasks.Task<string> checkActualReturnDateAsync(string bookISBN) {
            return base.Channel.checkActualReturnDateAsync(bookISBN);
        }
        
        public int saveBookBorrowed(int userID, string bookISBN, string borrowDate, string estimatedReturnDate) {
            return base.Channel.saveBookBorrowed(userID, bookISBN, borrowDate, estimatedReturnDate);
        }
        
        public System.Threading.Tasks.Task<int> saveBookBorrowedAsync(int userID, string bookISBN, string borrowDate, string estimatedReturnDate) {
            return base.Channel.saveBookBorrowedAsync(userID, bookISBN, borrowDate, estimatedReturnDate);
        }
    }
}
